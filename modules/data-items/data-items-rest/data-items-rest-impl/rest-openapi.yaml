components:
    schemas:
        InitDataItem:
            properties:
                customerId:
                    type: integer
                    format: int64
                dataItems:
                    type: array
                    items:
                        $ref: '#/components/schemas/DataItem'
        DataItem:
            description: DataItem model
            properties:
                id:
                    format: int64
                    readOnly: true
                    type: integer
                externalReferenceCode:
                    readOnly: true
                    type: string
                name:
                    type: string
                description:
                    type: string
                order:
                    type: integer
                    format: int64
                type:
                    type: string
                parentId:
                    type: integer
                    format: int64
                isDefault:
                    type: boolean

                dataItems:
                    type: array
                    items:
                        $ref: '#/components/schemas/DataItem'
                    nullable: true
                    readOnly: true

        Location:
            description: LocationData model
            properties:
                id:
                    format: int64
                    readOnly: true
                    type: integer
                externalReferenceCode:
                    readOnly: true
                    type: string
                title:
                    type: string
                province:
                    type: string
                provinceCode:
                    type: string
                district:
                    type: string
                districtCode:
                    type: string
                ward:
                    type: string
                wardCode:
                    type: string
                isDefault:
                    type: boolean
info:
    description: "DataItemRest REST API"
    license:
        name: "Apache 2.0"
        url: "http://www.apache.org/licenses/LICENSE-2.0.html"
    title: "Dogoo DataItemRest"
    version: v2.0
openapi: 3.0.1

paths:
    "/data-items/init-data":
        post:
            tags: ["DataItem"]
            description: Create new a DataItem
            operationId: postInitDataItem
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/InitDataItem"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/InitDataItem"
            responses:
                201:
                    description:
                        "Create a DataItem"
                    content:
                        application/json: {}
                        application/xml: {}
    "/data-items":
        post:
            tags: ["DataItem"]
            description: Create new a DataItem
            operationId: postDataItem
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DataItem"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/DataItem"
            responses:
                201:
                    description:
                        "Create a DataItem"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DataItem"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/DataItem"
    "/data-items/{dataItemId}":
        put:
            tags: ["DataItem"]
            description: Update a DataItem
            operationId: putDataItem
            parameters:
                - in: path
                  name: dataItemId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DataItem"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/DataItem"
            responses:
                200:
                    description:
                        "Update a DataItem"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DataItem"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/DataItem"
        get:
            tags: ["DataItem"]
            description: Get a DataItem
            operationId: getDataItem
            parameters:
                - in: path
                  name: dataItemId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    description:
                        "Get detail a DataItem"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DataItem"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/DataItem"
        delete:
            tags: ["DataItem"]
            description: Delete a DataItem
            operationId: deleteDataItem
            parameters:
                - in: path
                  name: dataItemId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    description:
                        "Delete a DataItem"
                    content:
                        application/json: {}
                        application/xml: {}

    "/data-items/by-external-reference-code/{externalReferenceCode}":
        put:
            tags: ["DataItem"]
            description: Update a DataItem by externalReferenceCode
            operationId: putDataItemByExternalReferenceCode
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DataItem"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/DataItem"
            responses:
                200:
                    description:
                        "Update a DataItem"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DataItem"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/DataItem"
        get:
            tags: ["DataItem"]
            description: Get a DataItem by externalReferenceCode
            operationId: getDataItemByExternalReferenceCode
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description:
                        "Get a DataItem"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DataItem"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/DataItem"
        delete:
            tags: ["DataItem"]
            description: Delete a DataItem by externalReferenceCode
            operationId: deleteDataItemByExternalReferenceCode
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    description:
                        "Delete a DataItem"
                    content:
                        application/json: {}
                        application/xml: {}

    "/data-items/type/{type}/parent/{parentCode}":
        get:
            tags: ["DataItem"]
            description: Get DataItems by parentcode
            operationId: getDataItemByParentCode
            parameters:
                - in: path
                  name: type
                  required: true
                  schema:
                      type: string
                - in: path
                  name: parentCode
                  required: true
                  description: parentCode can be parentId or referenceCode
                  schema:
                      type: string
                - in: query
                  name: sibling
                  required: false
                  description: sibling can be parentId or referenceCode
                  schema:
                      type: integer
            responses:
                200:
                    description:
                        "Update a DataItem"
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/DataItem"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/DataItem"
                                type: array

    "/location":
        get:
            tags: ["Location"]
            description: Get DataItems by parentcode
            operationId: getLocationDatasPage
            parameters:
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string

            responses:
                200:
                    description:
                        "Update a DataItem"
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Location"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Location"
                                type: array
