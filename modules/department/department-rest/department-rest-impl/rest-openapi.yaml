components:
    schemas:
        ExceptionType:
            description: Exception Type
            properties:
                status:
                    enum: [ BadRequest, Auth, Resource ]
        Department:
            description: Department model
            properties:
                id:
                    format: int64
                    readOnly: true
                    type: integer
                externalReferenceCode:
                    readOnly: true
                    type: string

                name:
                    type: string

                code:
                    type: string

                parentId:
                    type: integer
                    format: int64

                business:
                    type: object
                    properties:
                      id:
                        format: int64
                        type: integer
                      externalReferenceCode:
                          type: string
                      name:
                        type: string
                    readOnly: true


                businessId:
                    format: int64
                    type: integer
                    writeOnly: true

                order:
                    type: integer

                type:
                    enum: [company, branch, unit, department]

                tax:
                    type: string

                address:
                    type: string

                headOffice:
                    type: string

                alias:
                    type: string

                description:
                    type: string

                status:
                    enum: [ pending, reject, approved, trashed ]
                    readOnly: true

                statusDate:
                    type: string
                    format: date-time
                    readOnly: true

                isDeleted:
                  type: boolean
                  readOnly: true


        Business:
            properties:
                id:
                    format: int64
                    readOnly: true
                    type: integer
                externalReferenceCode:
                    readOnly: true
                    type: string
                name:
                  type: string




info:
    description: "DepartmentRest REST API"
    license:
        name: "Apache 2.0"
        url: "http://www.apache.org/licenses/LICENSE-2.0.html"
    title: "Dogoo DepartmentRest Sample"
    version: v2.0
openapi: 3.0.1

paths:
    "/departments":
        get:
            tags: ["Department"]
            description:
                Retrieves the department. Results can be paginated, filtered, searched, and sorted.
            operationId: getDepartmentsPage
            parameters:
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    description: The data returned
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Department"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Department"
                                type: array
        post:
            tags: ["Department"]
            description: Create new a Department
            operationId: postDepartment
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Department"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Department"
            responses:
                201:
                    description:
                        "Create a Department"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Department"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Department"
    "/departments/{departmentId}":
        put:
            tags: ["Department"]
            description: Update a Department
            operationId: putDepartment
            parameters:
                - in: path
                  name: departmentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Department"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Department"
            responses:
                200:
                    description:
                        "Update a Department"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Department"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Department"
        get:
            tags: ["Department"]
            description: Get a Department
            operationId: getDepartment
            parameters:
                - in: path
                  name: departmentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    description:
                        "Get detail a Department"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Department"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Department"
        delete:
            tags: ["Department"]
            description: Delete a Department
            operationId: deleteDepartment
            parameters:
                - in: path
                  name: departmentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    description:
                        "Delete a Department"
                    content:
                        application/json: {}
                        application/xml: {}

    "/departments/by-external-reference-code/{externalReferenceCode}":
        put:
            tags: ["Department"]
            description: Update a Department by externalReferenceCode
            operationId: putDepartmentByExternalReferenceCode
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Department"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Department"
            responses:
                200:
                    description:
                        "Update a Department"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Department"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Department"
        get:
            tags: ["Department"]
            description: Get a Department by externalReferenceCode
            operationId: getDepartmentByExternalReferenceCode
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description:
                        "Get a Department"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Department"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Department"
        delete:
            tags: ["Department"]
            description: Delete a Department by externalReferenceCode
            operationId: deleteDepartmentByExternalReferenceCode
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    description:
                        "Delete a Department"
                    content:
                        application/json: {}
                        application/xml: {}
    "/businesss":
        get:
            tags: ["Business"]
            description:
                Retrieves the business. Results can be paginated, filtered, searched, and sorted.
            operationId: getBusinesssPage
            parameters:
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    description: The data returned
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Business"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Business"
                                type: array
        post:
            tags: ["Business"]
            description: Create new a Business
            operationId: postBusiness
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Business"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Business"
            responses:
                201:
                    description:
                        "Create a Business"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Business"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Business"
    "/businesss/{businessId}":
        put:
            tags: ["Business"]
            description: Update a Business
            operationId: putBusiness
            parameters:
                - in: path
                  name: businessId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Business"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Business"
            responses:
                200:
                    description:
                        "Update a Business"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Business"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Business"
        get:
            tags: ["Business"]
            description: Get a Business
            operationId: getBusiness
            parameters:
                - in: path
                  name: businessId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    description:
                        "Get detail a Business"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Business"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Business"
        delete:
            tags: ["Business"]
            description: Delete a Business
            operationId: deleteBusiness
            parameters:
                - in: path
                  name: businessId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    description:
                        "Delete a Business"
                    content:
                        application/json: {}
                        application/xml: {}

    "/businesss/by-external-reference-code/{externalReferenceCode}":
        put:
            tags: ["Business"]
            description: Update a Business by externalReferenceCode
            operationId: putBusinessByExternalReferenceCode
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Business"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Business"
            responses:
                200:
                    description:
                        "Update a Business"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Business"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Business"
        get:
            tags: ["Business"]
            description: Get a Business by externalReferenceCode
            operationId: getBusinessByExternalReferenceCode
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description:
                        "Get a Business"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Business"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Business"
        delete:
            tags: ["Business"]
            description: Delete a Business by externalReferenceCode
            operationId: deleteBusinessByExternalReferenceCode
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    description:
                        "Delete a Business"
                    content:
                        application/json: {}
                        application/xml: {}



